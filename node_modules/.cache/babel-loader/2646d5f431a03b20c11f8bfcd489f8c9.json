{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/fnonato/Desktop/REACT/crwn-clothing-ver/crwn-git5/crwn-git/src/components/cart-dropdown/card-dropdown.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component'; // import { selectCartItems } from '../../redux/cart/cart.selectors';\n// import { createStructuredSelector } from 'reselect';\n\nimport './cart-dropdown.styles.scss';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch,\n  ...otherProps\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"cart-dropdown\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-items\",\n    children: cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: cartItem\n    }, cartItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this)) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"empty-message\",\n      children: \" Your cart is empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n    onClick: () => {\n      history.push('/checkout');\n      dispatch(toggleCartHidden());\n    },\n    children: \" GO TO CHECKOUT \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\n_c = CartDropdown;\n\nconst mapStateToProps = ({\n  cart: {\n    cartItems\n  }\n}) => ({\n  cartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));\n\nvar _c;\n\n$RefreshReg$(_c, \"CartDropdown\");","map":{"version":3,"sources":["/Users/fnonato/Desktop/REACT/crwn-clothing-ver/crwn-git5/crwn-git/src/components/cart-dropdown/card-dropdown.component.jsx"],"names":["React","connect","CustomButton","CartItem","withRouter","toggleCartHidden","CartDropdown","cartItems","history","dispatch","otherProps","length","map","cartItem","id","push","mapStateToProps","cart"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,OAAOC,QAAP,MAAqB,kCAArB,C,CACA;AACA;;AACA,OAAO,6BAAP;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAE;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,QAArB;AAA+B,KAAGC;AAAlC,CAAF,kBACjB;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA,0BACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,cAEQH,SAAS,CAACI,MAAV,GACAJ,SAAS,CAACK,GAAV,CAAcC,QAAQ,iBACtB,QAAC,QAAD;AAA4B,MAAA,IAAI,EAAEA;AAAlC,OAAeA,QAAQ,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,YADA,CADA,gBAKA;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UADJ,eAaI,QAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAM;AACzBN,MAAAA,OAAO,CAACO,IAAR,CAAa,WAAb;AACAN,MAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACC,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMC,Y;;AAsBN,MAAMU,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACV,IAAAA;AAAD;AAAR,CAAD,MAA4B;AAChDA,EAAAA;AADgD,CAA5B,CAAxB;;AAIA,eAAeH,UAAU,CAAEH,OAAO,CAACe,eAAD,CAAP,CAAyBV,YAAzB,CAAF,CAAzB","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport CustomButton from '../custom-button/custom-button.component';\nimport CartItem from '../cart-item/cart-item.component';\n// import { selectCartItems } from '../../redux/cart/cart.selectors';\n// import { createStructuredSelector } from 'reselect';\nimport './cart-dropdown.styles.scss';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ( {cartItems, history, dispatch, ...otherProps }) => (\n    <div className='cart-dropdown'>\n        <div className='cart-items'>\n            {\n                cartItems.length ? (\n                cartItems.map(cartItem => (\n                <CartItem key={cartItem.id} item={cartItem} />\n                ))\n                ) : (\n                <span className='empty-message'> Your cart is empty</span>\n                )\n            }\n\n        </div>\n        <CustomButton onClick={() => {\n            history.push('/checkout');\n            dispatch(toggleCartHidden());\n            }}\n        > GO TO CHECKOUT </CustomButton>\n    </div>\n);\n\nconst mapStateToProps = ({ cart: {cartItems} }) => ({\n    cartItems\n});\n\nexport default withRouter (connect(mapStateToProps)(CartDropdown));\n"]},"metadata":{},"sourceType":"module"}